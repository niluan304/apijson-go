name: Apijson CI


on:
  push:
    branches:
      - master
      - develop
      - personal/**
      - feature/**
      - enhance/**
      - fix/**

  pull_request:
    branches:
      - master
      - develop
      - personal/**
      - feature/**
      - enhance/**
      - fix/**

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  TZ: "Asia/Shanghai"


jobs:
  code-test:
    runs-on: ubuntu-latest

    # Service containers to run with `code-test`
    services:
      # MySQL backend server.
      mysql:
        image: loads/mysql:5.7
        env:
          MYSQL_DATABASE: my_apijson
          MYSQL_ROOT_PASSWORD: 12345678
        ports:
          # Maps tcp port 3306 on service container to the host
          - 3306:3306

    strategy:
      matrix:
        go-version: [ "1.18","1.19" ]
        goarch: [ "amd64" ]

    steps:
      # TODO: szenius/set-timezone update to node16
      - name: Setup Timezone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Shanghai"

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Start Apollo Containers
        run: docker-compose -f ".github/workflows/apollo/docker-compose.yml" up -d --build

      - name: Setup Golang ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Build & Test
        run: |
          echo "Building linux amd64 binary..."
          cd demo/todo
          go mod tidy
          cp config.yaml.example config.yaml
          GOOS=linux GOARCH=amd64 go build main.go
          cd /tests
          go test

      - name: Stop Apollo Containers
        run: docker-compose -f ".github/workflows/apollo/docker-compose.yml" down

      - name: Report Coverage
        uses: codecov/codecov-action@v3
        with:
          flags: go-${{ matrix.go-version }}-${{ matrix.goarch }}
